import java.util.ArrayList;
import java.util.List;

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> result = new ArrayList<>();

        int rowBegin = 0;
        int rowEnd = matrix.length - 1;
        int columnBegin = 0;
        int columnEnd = matrix[0].length - 1;

        while (rowBegin <= rowEnd && columnBegin <= columnEnd) {
        // Traverse Right
        for( int i = columnBegin; i <= columnEnd; i++){
            result.add(matrix[rowBegin][i]);
        } 
        rowBegin++;   

        // Traverse Down
        for (int i = rowBegin; i <= rowEnd; i++){
            result.add(matrix[i][columnEnd]);
        }
        columnEnd--;

        // Traverse left
            if (rowBegin <= rowEnd) {
                for (int i = columnEnd; i >= columnBegin; i--) {
                    result.add(matrix[rowEnd][i]);
                }
                rowEnd--;
            }

        // Traverse Up
            if (columnBegin <= columnEnd) {
                for (int i = rowEnd; i >= rowBegin; i--){
                    result.add(matrix[i][columnBegin]);
                }
                columnBegin++;
            }
        }

        return result;
    }
}
